<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="k1.smart.team.mapper.cje.StockMapper">

<select id="getAllStockList" parameterType="String" resultType="Stock">
	SELECT 
		 RIGHT(s.inventoryCode,3) AS inventoryCode
		,s.mainBusinessCode
		,RIGHT(s.itemCode,3) AS itemCode
		,i.itemName
		,i.itemType
		,RIGHT(i.categoryCode,3) AS categoryCode
		,i.largeCategory
		,i.middleCategory
		,i.smallCategory
		,i.itemStandard
		,i.itemOrigin
		,RIGHT(s.productPriceCode,3) AS productPriceCode
		,p.productPrice
		,s.itemCount
		,s.totalPrice
		,RIGHT(s.warehouseCode,3) AS warehouseCode
		,w.warehouseName
		,w.location
		,w.outPlace
		,s.stockWeight
		,s.`status`
		,s.`comment`
		,s.regDate AS stockRegDate
		,s.updateDate AS stockUpdateDate
	FROM
		k1_tb_stock AS s
		JOIN
		k1_view_item_info AS i
		ON
		i.itemCode = s.itemCode
		JOIN
		k1_tb_warehouse_info AS w
		ON
		s.warehouseCode = w.warehouseCode
		LEFT JOIN
		k1_tb_product_price AS p
		ON
		s.productPriceCode = p.productPriceCode
	WHERE 
		s.mainBusinessCode = #{mainBusinessCode};
</select>

<select id="getStockInfo" parameterType="String" resultType="Stock">
	SELECT
		 RIGHT(s.inventoryCode,3) AS inventoryCode
		,RIGHT(s.itemCode,3) AS itemCode
		,i.itemName
		,i.itemType
		,RIGHT(i.categoryCode,3) AS categoryCode
		,i.largeCategory
		,i.middleCategory
		,i.smallCategory
		,i.itemStandard
		,i.itemOrigin
		,RIGHT(s.productPriceCode,3) AS productPriceCode
		,p.productPrice
		,s.itemCount
		,s.totalPrice
		,RIGHT(s.warehouseCode,3) AS warehouseCode
		,w.warehouseName
		,w.location
		,w.outPlace
		,s.stockWeight
		,s.`status`
		,s.`comment`
		,s.regDate
		,s.updateDate
	FROM
		k1_tb_stock AS s
		JOIN
		k1_view_item_info AS i
		ON
		i.itemCode = s.itemCode
		JOIN
		k1_tb_warehouse_info AS w
		ON
		s.warehouseCode = w.warehouseCode
		LEFT JOIN
		k1_tb_product_price AS p
		ON
		s.productPriceCode = p.productPriceCode
	WHERE
		s.mainBusinessCode = #{mainBusinessCode}
		AND s.inventoryCode = CONCAT('inventoryCode_',#{inventoryCode});
</select>

<select id="getStockStorings" parameterType="String" resultType="Storing">
	SELECT 
		 RIGHT(a.stockAdjCode,3) AS stockAdjCode
		,a.stockReasonCode
		,r.reason AS stockReason
		,a.totalPrice
		,a.endDate
		,a.briefs
		,a.managerId
		,u.userName AS managerName
		,a.updateDate
	FROM
		k1_tb_stock_adjustment AS a
		JOIN
		k1_tb_stock_adjustment_detail AS ad
		ON
		a.stockAdjCode = ad.stockAdjCode
		JOIN
		k1_tb_stock_reason AS r
		ON
		a.stockReasonCode = r.stockReasonCode
		JOIN
		k1_tb_user AS u
		ON
		a.managerId = u.userId
	WHERE
		ad.inventoryCode = CONCAT('inventoryCode_',#{inventoryCode})
	ORDER BY a.endDate DESC
	LIMIT 10;
</select>

<!-- 재고의 수량·중량이 0인지 검사 -->
<select id="stockRemoveValid" parameterType="String" resultType="map">
	SELECT 
		 s.itemCount
		,s.stockWeight
	FROM 
		k1_tb_stock AS s
	WHERE
		inventoryCode = CONCAT('inventoryCode_',#{inventoryCode})
		AND mainBusinessCode = #{mainBusinessCode};
</select>

<delete id="removeAdjDetailByStock" parameterType="String">
	DELETE 
		ad
	FROM
		k1_tb_stock AS s
		JOIN
		k1_tb_stock_adjustment_detail AS ad
		ON
		ad.inventoryCode = s.inventoryCode
		JOIN
		k1_tb_stock_adjustment AS a
		ON
		s.mainBusinessCode = a.mainBusinessCode
	WHERE
		s.inventoryCode = CONCAT('inventoryCode_',#{inventoryCode})
		AND s.mainBusinessCode = #{mainBusinessCode};
</delete>

<delete id="removeStock">
	DELETE 
	FROM 
		k1_tb_stock
	WHERE 
		inventoryCode = CONCAT('inventoryCode_',#{inventoryCode})
		AND mainBusinessCode = #{mainBusinessCode};
</delete>

</mapper>
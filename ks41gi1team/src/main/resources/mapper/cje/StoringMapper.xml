<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="k1.smart.team.mapper.cje.StoringMapper">

<!-- 물류이동내역(전체목록) -->
<select id="getAllStoringList" parameterType="map" resultType="Storing">
	SELECT 
		 RIGHT(a.stockAdjCode,3) AS stockAdjCode
		,a.stockReasonCode
		,a.reason AS stockReason
		,a.clientCode
		,a.businessName
		,GROUP_CONCAT(DISTINCT ad.itemName SEPARATOR ', ') AS itemList
		,a.totalPrice
		,a.briefs
		,a.requestDate
		,a.adjDate
		,a.endDate
		,a.managerId
		,a.managerName
		,a.regDate
		,LEFT(a.updateDate,10) AS updateDate
	FROM 
		k1_view_stock_adjustment a
		JOIN
		(SELECT
			 ad.stockAdjDetailCode
			,ad.stockAdjCode
			,i.itemName
		FROM
			k1_tb_stock_adjustment_detail ad
			JOIN
			k1_view_item_info i
			ON
			ad.itemCode = i.itemCode
		) AS ad
		ON
		a.stockAdjCode = ad.stockAdjCode
	<trim prefix="WHERE" prefixOverrides="AND |OR ">
		<if test="mainBusinessCode != null and mainBusinessCode != ''.toString()">
			a.mainBusinessCode = #{mainBusinessCode}
		</if>
		<if test="stockReasonCode != null and stockReasonCode != ''.toString()">
			AND a.stockReasonCode = ${stockReasonCode}
		</if>
		<if test="warehouseCode != null and warehouseCode != ''.toString()">
			OR a.sendWarehouse = CONCAT('warehouseCode_',#{warehouseCode})
		</if>
		<if test="warehouseCode != null and warehouseCode != ''.toString()">
			OR a.receiveWarehouse = CONCAT('warehouseCode_',#{warehouseCode})
		</if>
	</trim>
	GROUP BY a.stockAdjCode;
</select>

<!-- 최근 7일간 물류이동 횟수(사유별) -->
<select id="getRecentStoring" parameterType="String" resultType="Map">
	SELECT
		 s1.s1_Warehousing
		,s2.s2_MaterialUse
		,s3.s3_Production
		,s4.s4_Moving
		,s5.s5_Shipment
		,s6.s6_Adjustment
		,s7.s7_Return
		,s8.s8_Defect
	FROM
		(SELECT
			COUNT(*) AS s1_Warehousing
		FROM k1_tb_stock_adjustment AS s1
		WHERE
			s1.mainBusinessCode = #{mainBusinessCode}
			AND adjDate > SUBDATE(CURDATE(), 7)
			AND stockReasonCode = 1
		) AS s1
		JOIN
		(SELECT
			COUNT(*) AS s2_MaterialUse
		FROM k1_tb_stock_adjustment AS s2
		WHERE
			s2.mainBusinessCode = #{mainBusinessCode}
			AND adjDate > SUBDATE(CURDATE(), 7)
			AND stockReasonCode = 2
		) AS s2
		JOIN
		(SELECT
			COUNT(*) AS s3_Production
		FROM k1_tb_stock_adjustment AS s3
		WHERE
			s3.mainBusinessCode = #{mainBusinessCode}
			AND adjDate > SUBDATE(CURDATE(), 7)
			AND stockReasonCode = 3
		) AS s3
		JOIN
		(SELECT
			COUNT(*) AS s4_Moving
		FROM k1_tb_stock_adjustment AS s4
		WHERE
			s4.mainBusinessCode = #{mainBusinessCode}
			AND adjDate > SUBDATE(CURDATE(), 7)
			AND stockReasonCode = 4
		) AS s4
		JOIN
		(SELECT
			COUNT(*) AS s5_Shipment
		FROM k1_tb_stock_adjustment AS s5
		WHERE
			s5.mainBusinessCode = #{mainBusinessCode}
			AND adjDate > SUBDATE(CURDATE(), 7)
			AND stockReasonCode = 5
		) AS s5
		JOIN
		(SELECT
			COUNT(*) AS s6_Adjustment
		FROM k1_tb_stock_adjustment AS s6
		WHERE
			s6.mainBusinessCode = #{mainBusinessCode}
			AND adjDate > SUBDATE(CURDATE(), 7)
			AND stockReasonCode = 6
		) AS s6
		JOIN
		(SELECT
			COUNT(*) AS s7_Return
		FROM k1_tb_stock_adjustment AS s7
		WHERE
			s7.mainBusinessCode = #{mainBusinessCode}
			AND adjDate > SUBDATE(CURDATE(), 7)
			AND stockReasonCode = 7
		) AS s7
		JOIN
		(SELECT
			COUNT(*) AS s8_Defect
		FROM k1_tb_stock_adjustment AS s8
		WHERE
			s8.mainBusinessCode = #{mainBusinessCode}
			AND adjDate > SUBDATE(CURDATE(), 7)
			AND stockReasonCode = 8
		) AS s8;
</select>

<!-- 최근 7일간 생산·출하 횟수 -->
<select id="getRecentProShip" parameterType="String" resultType="map">
	SELECT
		 p.productCnt
		,s.shipmentCnt
			,CASE 
				WHEN p.adjDate IS NULL THEN s.adjDate
				ELSE p.adjDate
			 END AS adjDate
	FROM
		(SELECT
			 COUNT(*) AS productCnt
			,DATE_FORMAT(p.adjDate, '%y-%m-%d') AS adjDate
		FROM
			k1_tb_stock_adjustment AS p
		WHERE
			stockReasonCode = 3
			AND p.adjDate > SUBDATE(CURDATE(), 7)
			AND p.mainBusinessCode = #{mainBusinessCode}
		GROUP BY
			p.adjDate
		) AS p
		LEFT JOIN
		(SELECT
			 COUNT(*) AS shipmentCnt
			,DATE_FORMAT(s.adjDate, '%y-%m-%d') AS adjDate
		FROM
			k1_tb_stock_adjustment AS s
		WHERE
			stockReasonCode = 5
			AND s.adjDate > SUBDATE(CURDATE(), 7)
			AND s.mainBusinessCode = #{mainBusinessCode}
		GROUP BY
			s.adjDate
		) AS s
		ON
		p.adjDate = s.adjDate
	GROUP BY
		p.adjDate
	UNION
	SELECT
		 p.productCnt
		,s.shipmentCnt
		,CASE 
			WHEN p.adjDate IS NULL THEN s.adjDate
			ELSE p.adjDate
		 END AS adjDate
	FROM
		(SELECT
			 COUNT(*) AS productCnt
			,DATE_FORMAT(p.adjDate, '%y-%m-%d') AS adjDate
		FROM
			k1_tb_stock_adjustment AS p
		WHERE
			stockReasonCode = 3
			AND p.adjDate > SUBDATE(CURDATE(), 7)
			AND p.mainBusinessCode = #{mainBusinessCode}
		GROUP BY
			p.adjDate
		) AS p
		RIGHT JOIN
		(SELECT
			 COUNT(*) AS shipmentCnt
			,DATE_FORMAT(s.adjDate, '%y-%m-%d') AS adjDate
		FROM
			k1_tb_stock_adjustment AS s
		WHERE
			stockReasonCode = 5
			AND s.adjDate > SUBDATE(CURDATE(), 7)
			AND s.mainBusinessCode = #{mainBusinessCode}
		GROUP BY
			s.adjDate
		) AS s
		ON
		p.adjDate = s.adjDate
	GROUP BY
		p.adjDate;
</select>

<!-- 물류이동내역 한줄 조회 -->
<select id="getStoringInfo" parameterType="map" resultType="Storing">
	SELECT 
		 RIGHT(a.stockAdjCode,3) AS stockAdjCode
		,RIGHT(a.shipmentPlanCode,3) AS shipmentPlanCode
		,RIGHT(a.returnRegCode,3) AS returnRegCode
		,a.clientCode
		,a.businessName
		,RIGHT(a.contractCode,3) AS contractCode
		,RIGHT(a.sendWarehouse,3) AS sendWarehouse
		,w1.warehouseName AS sendWarehouseName
		,w1.location AS sendWarehouseLocation
		,w1.outPlace AS sendWarehouseOutPlace
		,RIGHT(a.receiveWarehouse,3) AS receiveWarehouse
		,w2.warehouseName AS receiveWarehouseName
		,w2.location AS receiveWarehouseLocation
		,w2.outPlace AS receiveWarehouseOutPlace
		,a.totalPrice
		,a.totalWeight
		,RIGHT(a.materialOrderCode,3) AS materialOrderCode
		,RIGHT(a.productOrderCode,3) AS productOrderCode
		,a.deliveryCost
		,RIGHT(a.deliveryCode,3) AS deliveryCode
		,a.briefs
		,a.managerId
		,a.managerName
		,a.sendPlanDate
		,a.receivePlanDate
		,a.requestDate
		,a.adjDate
		,a.endDate
		,a.regDate
		,a.updateDate
	FROM 
		k1_view_stock_adjustment AS a
		LEFT JOIN
		k1_tb_warehouse_info AS w1
		ON
		a.sendWarehouse = w1.warehouseCode
		LEFT JOIN
		k1_tb_warehouse_info AS w2
		ON
		a.receiveWarehouse = w2.warehouseCode
	<trim prefix="WHERE" prefixOverrides="AND |OR ">
		<if test="stockAdjCode != null and stockAdjCode != ''.toString()">
			a.stockAdjCode = CONCAT('stockAdjCode_',#{stockAdjCode})
		</if>
		<if test="mainBusinessCode != null and mainBusinessCode != ''.toString()">
			AND a.mainBusinessCode = #{mainBusinessCode}
		</if>
		<if test="stockReasonCode != null and stockReasonCode != ''.toString()">
			AND a.stockReasonCode = ${stockReasonCode}
		</if>
	</trim>
</select>

<!-- 물류이동내역 상세(목록) 조회  -->
<select id="getStoringDetails" parameterType="map" resultType="Storing">
	SELECT
		 RIGHT(d.stockAdjDetailCode,3) AS stockAdjDetailCode
		,RIGHT(d.itemCode,3) AS itemCode
		,i.itemName
		,RIGHT(d.purchaseTsCode,3) AS purchaseTsCode
		,RIGHT(d.salesTsCode,3) AS salesTsCode
		,CASE
			WHEN d.purchaseTsCode IS NOT NULL THEN p.unitPrice
			WHEN d.salesTsCode IS NOT NULL THEN s.unitPrice
			ELSE d.unitPrice
		END AS unitPrice
		,d.adjCount
		,d.afterCount
		,d.adjWeight
		,d.totalWeight
		,d.`status`
		,d.defectType
		,d.defectHandlingType
		,d.`comment`
	FROM
		k1_tb_stock_adjustment_detail d
		JOIN
		k1_view_stock_adjustment a
		ON
		d.stockAdjCode = a.stockAdjCode
		JOIN
		k1_view_item_info i
		ON
		d.itemCode = i.itemCode
		LEFT JOIN
		k1_view_sales_transaction s
		ON
		d.salesTsCode = s.salesTsCode
		LEFT JOIN
		(SELECT
			 p.purchaseTsCode
			,pd.itemCode
			,pd.unitPrice
		FROM
			k1_view_purchase_transaction p
			JOIN
			k1_view_purchase_transaction_detail pd
			ON
			p.purchaseTsCode = pd.purchaseTsCode
		) AS p
		ON
		d.purchaseTsCode = p.purchaseTsCode
	WHERE
		a.stockAdjCode = CONCAT('stockAdjCode_', #{stockAdjCode})
		<if test="mainBusinessCode != null and mainBusinessCode != ''.toString()">
			AND a.mainBusinessCode = #{mainBusinessCode}
		</if>
</select>

<!-- 물류이동내역 등록(한줄) -->
<insert id="addStoringInfo" parameterType="Storing">
	INSERT INTO k1_tb_stock_adjustment
		(stockAdjCode, mainBusinessCode, stockReasonCode
		<if test="clientCode != null and clientCode != ''.toString()">, clientCode</if>
		<if test="contractCode != null and contractCode != ''.toString()">, contractCode</if>
		<if test="materialOrderCode != null and materialOrderCode != ''.toString()">, materialOrderCode</if>
		<if test="productOrderCode != null and productOrderCode != ''.toString()">, productOrderCode</if>
		<if test="deliveryCode != null and deliveryCode != ''.toString()">, deliveryCode</if>
		<if test="shipmentPlanCode != null and shipmentPlanCode != ''.toString()">, shipmentPlanCode</if>
		<if test="returnRegCode != null and returnRegCode != ''.toString()">, returnRegCode</if>
		<if test="sendWarehouse != null and sendWarehouse != ''.toString()">, sendWarehouse</if>
		<if test="receiveWarehouse != null and receiveWarehouse != ''.toString()">, receiveWarehouse</if>
		<if test="deliveryCost != null and deliveryCost != 0">, deliveryCost</if>
		<if test="sendPlanDate != null and sendPlanDate != ''.toString()">, sendPlanDate</if>
		<if test="receivePlanDate != null and receivePlanDate != ''.toString()">, receivePlanDate</if>
		, requestDate, adjDate
		<if test="endDate != null and endDate != ''.toString()">, endDate</if>
		<if test="briefs != null and briefs != ''.toString()">, briefs</if>
		, managerId, regDate, updateDate
	)VALUES (
		CONCAT('stockAdjCode_',#{stockAdjCode})
		, #{mainBusinessCode}
		, ${stockReasonCode}
		<if test="clientCode != null and clientCode != ''.toString()">, #{clientCode}</if>
		<if test="contractCode != null and contractCode != ''.toString()">, CONCAT('contractCode_', #{contractCode})</if>
		<if test="materialOrderCode != null and materialOrderCode != ''.toString()">, CONCAT('materialOrderCode_',#{materialOrderCode})</if>
		<if test="productOrderCode != null and productOrderCode != ''.toString()">, CONCAT('productOrderCode_',#{productOrderCode})</if>
		<if test="deliveryCode != null and deliveryCode != ''.toString()">, CONCAT('deliveryCode_',#{deliveryCode})</if>
		<if test="shipmentPlanCode != null and shipmentPlanCode != ''.toString()">, CONCAT('shipmentPlanCode_',#{shipmentPlanCode})</if>
		<if test="returnRegCode != null and returnRegCode != ''.toString()">, #{returnRegCode}</if>
		<if test="sendWarehouse != null and sendWarehouse != ''.toString()">, CONCAT('warehouseCode_',#{sendWarehouse})</if>
		<if test="receiveWarehouse != null and receiveWarehouse != ''.toString()">, CONCAT('warehouseCode_',#{receiveWarehouse})</if>
		<if test="deliveryCost != null and deliveryCost != 0">, ${deliveryCost}</if>
		<if test="sendPlanDate != null and sendPlanDate != ''.toString()">, #{sendPlanDate}</if>
		<if test="receivePlanDate != null and receivePlanDate != ''.toString()">, #{receivePlanDate}</if>
		, #{requestDate}
		, #{adjDate}
		<if test="endDate != null and endDate != ''.toString()">, #{endDate}</if>
		<if test="briefs != null and briefs != ''.toString()">, #{briefs}</if>
		, #{managerId}
		, NOW()
		, NOW()
	);
</insert>

<!-- 물류이동내역 등록(상세) -->
<insert id="addStoringDetails" parameterType="Stock">
	INSERT INTO k1_tb_stock_adjustment_detail
		(stockAdjDetailCode, stockAdjCode, itemCode
		<if test="purchaseTsCode != null and purchaseTsCode != ''.toString()">, purchaseTsCode</if>
		<if test="salesTsCode != null and salesTsCode != ''.toString()">, salesTsCode</if>
		<if test="unitPrice != null and unitPrice != 0">, unitPrice</if>
		, adjCount
		<if test="totalCount != null and totalCount != 0">, afterCount</if>
		, adjWeight
		<if test="totalWeight != null and totalWeight != 0">, totalWeight</if>
		<if test="status != null and status != ''.toString()">, `status`</if>
		<if test="defectType != null and defectType != ''.toString()">, defectType</if>
		<if test="defectHandlingType != null and defectHandlingType != ''.toString()">, defectHandlingType</if>
		<if test="comment != null and comment != ''.toString()">, `comment`</if>
	)VALUES (
		CONCAT('stockAdjDetailCode_', #{stockAdjDetailCode})
		, CONCAT('stockAdjCode_', #{stockAdjCode})
		, CONCAT('itemCode_',#{itemCode})
		<if test="purchaseTsCode != null and purchaseTsCode != ''.toString()">, CONCAT('purchase_ts_stCode_',#{purchaseTsCode})</if>
		<if test="salesTsCode != null and salesTsCode != ''.toString()">, CONCAT('salesTsCode_',#{salesTsCode})</if>
		<if test="unitPrice != null and unitPrice != 0">, #{unitPrice}</if>
		, #{itemCount}
		<if test="totalCount != null and totalCount != 0">, #{totalCount}</if>
		, #{itemWeight}
		<if test="totalWeight != null and totalWeight != 0">, #{totalWeight}</if>
		<if test="status != null and status != ''.toString()">, #{status}</if>
		<if test="defectType != null and defectType != ''.toString()">, #{defectType}</if>
		<if test="defectHandlingType != null and defectHandlingType != ''.toString()">, #{defectHandlingType}</if>
		<if test="comment != null and comment != ''.toString()">, #{comment}</if>
	);
</insert>

<!-- 물류이동내역 한줄테이블 삭제 -->
<delete id="removeStoringInfo" parameterType="map">
	DELETE
	FROM k1_tb_stock_adjustment
	<trim prefix="WHERE" prefixOverrides="AND |OR ">
		<if test="stockAdjCode != null and stockAdjCode != ''.toString()">
			stockAdjCode = CONCAT('stockAdjCode_',#{stockAdjCode})
		</if>
		<if test="warehouseCode != null and warehouseCode != ''.toString()">
			OR sendWarehouse = CONCAT('warehouseCode_',#{warehouseCode})
		</if>
		<if test="warehouseCode != null and warehouseCode != ''.toString()">
			OR receiveWarehouse = CONCAT('warehouseCode_',#{warehouseCode})
		</if>
	</trim>
</delete>

<!-- 물류이동내역 상세테이블 삭제 -->
<delete id="removeStoringDetails" parameterType="map">
	DELETE 
		d 
	FROM
		k1_tb_stock_adjustment a
		LEFT JOIN
		k1_tb_stock_adjustment_detail d
		ON
		a.stockAdjCode = d.stockAdjCode
	<trim prefix="WHERE" prefixOverrides="AND |OR ">
		<if test="stockAdjDetailCode != null and stockAdjDetailCode != ''.toString()">
			d.stockAdjDetailCode = CONCAT('stockAdjDetailCode_',#{stockAdjDetailCode})
		</if>
		<if test="stockAdjCode != null and stockAdjCode != ''.toString()">
			AND a.stockAdjCode = CONCAT('stockAdjCode_',#{stockAdjCode})
		</if>
		<if test="warehouseCode != null and warehouseCode != ''.toString()">
			AND a.sendWarehouse = CONCAT('warehouseCode_',#{warehouseCode}) OR a.receiveWarehouse = CONCAT('warehouseCode_',#{warehouseCode})
		</if>
	</trim>
</delete>

<!-- 출하계획 전체조회 -->
<select id="getShipmentPlanList" parameterType="String" resultType="Storing">
	SELECT 
		 RIGHT(sp.shipmentPlanCode,3) AS shipmentPlanCode
		,RIGHT(sp.contractCode,3) AS contractCode
		,sp.clientCode
		,sp.clientBusinessName AS businessName
		,sp.receiveAddr
		,sp.planDate AS sendPlanDate
		,sp.briefs
		,sp.managerId
		,sp.managerName
		,LEFT(sp.updateDate,10) AS updateDate
	FROM 
		k1_view_shipment_plan AS sp
	WHERE
		sp.mainBusinessCode = #{mainBusinessCode};
</select>

<!-- 출하계획 상세조회 -->
<select id="getShipmentPlanInfo" parameterType="String" resultType="Storing">
	SELECT 
		 RIGHT(sp.shipmentPlanCode,3) AS shipmentPlanCode
		,RIGHT(sp.contractCode,3) AS contractCode
		,RIGHT(sp.productOrderCode,3) AS productOrderCode
		,sp.clientCode
		,sp.clientBusinessName AS businessName
		,sp.receiveAddr
		,sp.planDate AS sendPlanDate
		,sp.briefs
		,sp.managerId
		,sp.managerName
		,sp.regDate
		,sp.updateDate
	FROM 
		k1_view_shipment_plan AS sp
	WHERE
		sp.mainBusinessCode = #{mainBusinessCode}
		AND sp.shipmentPlanCode = CONCAT('shipmentPlanCode_',#{shipmentPlanCode});
</select>
<select id="getShipmentPlanDetails" parameterType="String" resultType="Storing">
	SELECT
		 RIGHT(p.itemCode,3) AS itemCode
		,p.itemName
		,p.unitPrice
		,p.itemCount AS adjCount
		,p.itemWeight AS adjWeight
		,p.totalPrice
		,p.`comment`
	FROM
		k1_view_shipment_plan_detail p
	WHERE
		p.shipmentPlanCode = CONCAT('shipmentPlanCode_',#{shipmentPlanCode});
</select>

<!-- 반품요청내역 전체목록 -->
<select id="getReturnRegList" parameterType="String" resultType="Storing">
	SELECT 
		 RIGHT(r.returnRegCode,3) AS returnRegCode
		,r.clientCode
		,r.clientBusinessName AS businessName
		,r.totalPrice
		,r.briefs
		,r.managerId
		,r.managerName
		,LEFT(r.updateDate,10) AS updateDate
	FROM 
		k1_view_return_reg AS r
	WHERE
		r.mainBusinessCode = #{mainBusinessCode};
</select>

<!-- 반품요청내역 상세정보(날짜) -->
<select id="getReturnRegInfo" parameterType="String" resultType="Storing">
	SELECT 
		 RIGHT(r.returnRegCode,3) AS returnRegCode
		,r.clientCode
		,r.clientBusinessName AS businessName
		,RIGHT(r.purchaseTsCode,3) AS purchaseTsCode
		,RIGHT(r.salesTsCode,3) AS salesTsCode
		,r.contractCode
		,r.itemList
		,r.totalCount
		,r.totalPrice
		,r.briefs
		,r.managerId
		,r.managerName
		,r.regDate
		,r.updateDate
	FROM 
		k1_view_return_reg AS r
	WHERE
		r.returnRegCode = CONCAT('returnRegCode_',#{returnRegCode});
</select>

<!-- 반품요청내역 상세정보 목록 -->
<select id="getReturnRegDetails" parameterType="String" resultType="Storing">
	SELECT 
		 RIGHT(r.returnRegDetailCode,3) AS returnRegDetailCode
		,RIGHT(r.itemCode,3) AS itemCode
		,r.itemName
		,r.categoryCode
		,r.unitPrice
		,r.`count`
		,r.totalPrice
		,r.`comment`
	FROM 
		k1_view_return_reg_detail r
	WHERE
		r.returnRegCode = CONCAT('returnRegCode_',#{returnRegCode});
</select>

<!-- 재고정보수정→등록페이지 전달할 재고정보 하나 -->
<select id="getStockForStoring" parameterType="String" resultType="Stock">
	SELECT 
		 RIGHT(s.inventoryCode,3) AS inventoryCode
		,RIGHT(s.itemCode,3) AS itemCode
		,s.itemName
		,RIGHT(s.purchaseTsCode,3) AS purchaseTsCode
		,RIGHT(s.productPriceCode,3) AS productPriceCode
		,s.unitPrice
		,RIGHT(s.warehouseCode,3) AS warehouseCode
		,s.warehouseName
		,s.location
		,s.outPlace
		,s.`status`
		,s.`comment`
	FROM 
		k1_view_stock s
	WHERE
		s.inventoryCode = CONCAT('inventoryCode_', #{inventoryCode})
		AND
		s.mainBusinessCode = #{mainBusinessCode}
</select>

<!-- 완료되지 않은 배송요청·출하계획·반품요청 건수 조회 -->
<select id="unfinishedCnt" parameterType="String" resultType="map">
	SELECT
		 d.deliveryCnt
		,p.shipmentPlanCnt
		,r.returnRegCnt
	FROM
		(SELECT
			CASE
				WHEN COUNT(1) IS NOT NULL THEN COUNT(1)
				ELSE 0
			END AS deliveryCnt
		FROM
			k1_tb_delivery d
			JOIN
			k1_view_stock_adjustment a
			ON
			d.deliveryCode = a.deliveryCode
		WHERE
			a.mainBusinessCode = 'fac_ksmartSeoul_Seoul_001'
			AND a.endDate IS NULL
		) AS d
		JOIN
		(SELECT
			CASE
				WHEN COUNT(1) IS NOT NULL THEN COUNT(1)
				ELSE 0
			END AS shipmentPlanCnt
		FROM
			k1_view_shipment_plan p
			JOIN
			k1_view_stock_adjustment a
			ON
			p.shipmentPlanCode = a.shipmentPlanCode
		WHERE
			a.mainBusinessCode = 'fac_ksmartSeoul_Seoul_001'
			AND a.endDate IS NULL
		) AS p
		JOIN
		(SELECT
			CASE
				WHEN COUNT(1) IS NOT NULL THEN COUNT(1)
				ELSE 0
			END AS returnRegCnt
		FROM
			k1_tb_return_reg r
			JOIN
			k1_view_stock_adjustment a
			ON
			r.returnRegCode = a.returnRegCode
		WHERE
			a.mainBusinessCode = 'fac_ksmartSeoul_Seoul_001'
			AND a.endDate IS NULL
		) AS r
</select>



</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="k1.smart.team.mapper.cje.StoringMapper">

<!-- 물류이동내역(전체목록) -->
<select id="getAllStoringList" parameterType="String" resultType="Storing">
	SELECT 
		 RIGHT(a.stockAdjCode,3) AS stockAdjCode
		,a.stockReasonCode
		,r.reason AS stockReason
		,a.clientCode
		,c.businessName
		,GROUP_CONCAT(DISTINCT ad.itemName SEPARATOR ', ') AS itemList
		,a.totalPrice
		,a.briefs
		,a.requestDate
		,a.adjDate
		,a.endDate
		,a.managerId
		,u.userName AS managerName
		,a.regDate
		,LEFT(a.updateDate,10) AS updateDate
	FROM 
		k1_tb_stock_adjustment AS a
		JOIN
		k1_tb_stock_reason AS r
		ON
		a.stockReasonCode = r.stockReasonCode
		JOIN
		k1_tb_user AS u
		ON
		a.managerId = u.userId
		JOIN
		(SELECT
			 ad.stockAdjDetailCode
			,ad.stockAdjCode
			,s.inventoryCode
			,s.itemName
		FROM
			k1_tb_stock_adjustment_detail AS ad
			JOIN
			k1_view_stock AS s
			ON
			ad.inventoryCode = s.inventoryCode
		) AS ad
		ON
		a.stockAdjCode = ad.stockAdjCode
		LEFT JOIN
		k1_tb_client AS c
		ON
		a.clientCode= c.clientCode
	<trim prefix="WHERE" prefixOverrides="AND |OR ">
		<if test="mainBusinessCode != null and mainBusinessCode != ''.toString()">
			a.mainBusinessCode = #{mainBusinessCode}
		</if>
		<if test="stockReasonCode != null and stockReasonCode != ''.toString()">
			AND a.stockReasonCode = ${stockReasonCode}
		</if>
	</trim>
	GROUP BY a.stockAdjCode;
</select>

<!-- 최근 7일간 물류이동 횟수(사유별) -->
<select id="getRecentStoring" parameterType="String" resultType="Map">
	SELECT
		 s1.s1_Warehousing
		,s2.s2_MaterialUse
		,s3.s3_Production
		,s4.s4_Moving
		,s5.s5_Shipment
		,s6.s6_Adjustment
		,s7.s7_Return
		,s8.s8_Defect
	FROM
		(SELECT
			COUNT(*) AS s1_Warehousing
		FROM k1_tb_stock_adjustment AS s1
		WHERE
			s1.mainBusinessCode = #{mainBusinessCode}
			AND adjDate > SUBDATE(CURDATE(), 7)
			AND stockReasonCode = 1
		) AS s1
		JOIN
		(SELECT
			COUNT(*) AS s2_MaterialUse
		FROM k1_tb_stock_adjustment AS s2
		WHERE
			s2.mainBusinessCode = #{mainBusinessCode}
			AND adjDate > SUBDATE(CURDATE(), 7)
			AND stockReasonCode = 2
		) AS s2
		JOIN
		(SELECT
			COUNT(*) AS s3_Production
		FROM k1_tb_stock_adjustment AS s3
		WHERE
			s3.mainBusinessCode = #{mainBusinessCode}
			AND adjDate > SUBDATE(CURDATE(), 7)
			AND stockReasonCode = 3
		) AS s3
		JOIN
		(SELECT
			COUNT(*) AS s4_Moving
		FROM k1_tb_stock_adjustment AS s4
		WHERE
			s4.mainBusinessCode = #{mainBusinessCode}
			AND adjDate > SUBDATE(CURDATE(), 7)
			AND stockReasonCode = 4
		) AS s4
		JOIN
		(SELECT
			COUNT(*) AS s5_Shipment
		FROM k1_tb_stock_adjustment AS s5
		WHERE
			s5.mainBusinessCode = #{mainBusinessCode}
			AND adjDate > SUBDATE(CURDATE(), 7)
			AND stockReasonCode = 5
		) AS s5
		JOIN
		(SELECT
			COUNT(*) AS s6_Adjustment
		FROM k1_tb_stock_adjustment AS s6
		WHERE
			s6.mainBusinessCode = #{mainBusinessCode}
			AND adjDate > SUBDATE(CURDATE(), 7)
			AND stockReasonCode = 6
		) AS s6
		JOIN
		(SELECT
			COUNT(*) AS s7_Return
		FROM k1_tb_stock_adjustment AS s7
		WHERE
			s7.mainBusinessCode = #{mainBusinessCode}
			AND adjDate > SUBDATE(CURDATE(), 7)
			AND stockReasonCode = 7
		) AS s7
		JOIN
		(SELECT
			COUNT(*) AS s8_Defect
		FROM k1_tb_stock_adjustment AS s8
		WHERE
			s8.mainBusinessCode = #{mainBusinessCode}
			AND adjDate > SUBDATE(CURDATE(), 7)
			AND stockReasonCode = 8
		) AS s8;
</select>

<!-- 최근 7일간 생산·출하 횟수 -->
<select id="getRecentProShip" parameterType="String" resultType="map">
	SELECT
		 p.productCnt
		,s.shipmentCnt
			,CASE 
				WHEN p.adjDate IS NULL THEN s.adjDate
				ELSE p.adjDate
			 END AS adjDate
	FROM
		(SELECT
			 COUNT(*) AS productCnt
			,DATE_FORMAT(p.adjDate, '%y-%m-%d') AS adjDate
		FROM
			k1_tb_stock_adjustment AS p
		WHERE
			stockReasonCode = 3
			AND p.adjDate > SUBDATE(CURDATE(), 7)
			AND p.mainBusinessCode = #{mainBusinessCode}
		GROUP BY
			p.adjDate
		) AS p
		LEFT JOIN
		(SELECT
			 COUNT(*) AS shipmentCnt
			,DATE_FORMAT(s.adjDate, '%y-%m-%d') AS adjDate
		FROM
			k1_tb_stock_adjustment AS s
		WHERE
			stockReasonCode = 5
			AND s.adjDate > SUBDATE(CURDATE(), 7)
			AND s.mainBusinessCode = #{mainBusinessCode}
		GROUP BY
			s.adjDate
		) AS s
		ON
		p.adjDate = s.adjDate
	GROUP BY
		p.adjDate
	UNION
	SELECT
		 p.productCnt
		,s.shipmentCnt
		,CASE 
			WHEN p.adjDate IS NULL THEN s.adjDate
			ELSE p.adjDate
		 END AS adjDate
	FROM
		(SELECT
			 COUNT(*) AS productCnt
			,DATE_FORMAT(p.adjDate, '%y-%m-%d') AS adjDate
		FROM
			k1_tb_stock_adjustment AS p
		WHERE
			stockReasonCode = 3
			AND p.adjDate > SUBDATE(CURDATE(), 7)
			AND p.mainBusinessCode = #{mainBusinessCode}
		GROUP BY
			p.adjDate
		) AS p
		RIGHT JOIN
		(SELECT
			 COUNT(*) AS shipmentCnt
			,DATE_FORMAT(s.adjDate, '%y-%m-%d') AS adjDate
		FROM
			k1_tb_stock_adjustment AS s
		WHERE
			stockReasonCode = 5
			AND s.adjDate > SUBDATE(CURDATE(), 7)
			AND s.mainBusinessCode = #{mainBusinessCode}
		GROUP BY
			s.adjDate
		) AS s
		ON
		p.adjDate = s.adjDate
	GROUP BY
		p.adjDate;
</select>

<!-- 물류이동내역 한줄 -->
<select id="getStoringInfo" parameterType="String" resultType="Storing">
	SELECT 
		 RIGHT(a.stockAdjCode,3) AS stockAdjCode
		,RIGHT(a.shipmentPlanCode,3) AS shipmentPlanCode
		,RIGHT(a.returnRegCode,3) AS returnRegCode
		,a.clientCode
		,c.businessName
		,RIGHT(a.contractCode,3) AS contractCode
		,RIGHT(a.sendWarehouse,3) AS sendWarehouse
		,w1.warehouseName AS sendWarehouseName
		,w1.location AS sendWarehouseLocation
		,w1.outPlace AS sendWarehouseOutPlace
		,RIGHT(a.receiveWarehouse,3) AS receiveWarehouse
		,w2.warehouseName AS receiveWarehouseName
		,w2.location AS receiveWarehouseLocation
		,w2.outPlace AS receiveWarehouseOutPlace
		,a.totalPrice
		,a.totalWeight
		,RIGHT(a.materialOrderCode,3) AS materialOrderCode
		,RIGHT(a.productOrderCode,3) AS productOrderCode
		,a.deliveryCost
		,RIGHT(a.deliveryCode,3) AS deliveryCode
		,a.briefs
		,a.managerId
		,u.userName AS managerName
		,a.sendPlanDate
		,a.receivePlanDate
		,a.requestDate
		,a.adjDate
		,a.endDate
		,a.regDate
		,a.updateDate
	FROM 
		k1_view_stock_adjustment AS a
		JOIN
		k1_tb_user AS u
		ON
		a.managerId = u.userId
		LEFT JOIN
		k1_tb_client AS c
		ON
		a.clientCode = c.clientCode
		LEFT JOIN
		k1_tb_warehouse_info AS w1
		ON
		a.sendWarehouse = w1.warehouseCode
		LEFT JOIN
		k1_tb_warehouse_info AS w2
		ON
		a.receiveWarehouse = w2.warehouseCodes
	WHERE
		a.mainBusinessCode = #{mainBusinessCode}
		AND a.stockAdjCode = CONCAT('stockAdjCode_',#{stockAdjCode})
		AND a.stockReasonCode = ${stockReasonCode};
</select>

<!-- 1. 자재입고내역 상세(목록) -->
<select id="getWarehousingDetails" parameterType="String" resultType="Storing">
	SELECT
		 RIGHT(ad.stockAdjDetailCode,3) AS stockAdjDetailCode
		,RIGHT(ad.inventoryCode,3) AS inventoryCode
		,i.itemName
		,RIGHT(ad.purchaseTsCode,3) AS purchaseTsCode
		,p.unitPrice
		,ad.adjCount
		,ad.afterCount
		,ad.adjWeight
		,ad.stockWeight
		,ad.status
		,ad.`comment`
	FROM
		k1_tb_stock_adjustment AS a
		JOIN
		k1_tb_stock_adjustment_detail AS ad
		ON
		a.stockAdjCode = ad.stockAdjCode
		JOIN
		k1_view_stock AS i
		ON
		ad.inventoryCode = i.inventoryCode
		LEFT JOIN
		k1_view_purchase_transaction_detail AS p
		ON
		ad.purchaseTsCode = p.purchaseTsCode
	WHERE
		a.stockAdjCode = CONCAT('stockAdjCode_', #{stockAdjCode})
		AND a.stockReasonCode = 1;
</select>

<!-- 2. 자재사용내역 상세(목록) -->
<select id="getMaterialUseDetails" parameterType="String" resultType="Storing">
	SELECT
		 RIGHT(ad.stockAdjDetailCode,3) AS stockAdjDetailCode
		,RIGHT(ad.inventoryCode,3) AS inventoryCode
		,RIGHT(ad.purchaseTsCode,3) AS purchaseTsCode
		,p.unitPrice
		,i.itemName
		,ad.adjCount
		,ad.afterCount
		,ad.adjWeight
		,ad.stockWeight
		,ad.status
		,ad.`comment`
	FROM
		k1_tb_stock_adjustment AS a
		JOIN
		k1_tb_stock_adjustment_detail AS ad
		ON
		a.stockAdjCode = ad.stockAdjCode
		JOIN
		k1_view_stock AS i
		ON
		ad.inventoryCode = i.inventoryCode
		LEFT JOIN
		k1_view_purchase_transaction_detail AS p
		ON
		ad.purchaseTsCode = p.purchaseTsCode
		AND i.itemCode = p.itemCode
	WHERE
		a.stockAdjCode = CONCAT('stockAdjCode_', #{stockAdjCode})
		AND a.stockReasonCode = 2;
</select>

<!-- 3. 제품생산내역 상세(목록) -->
<select id="getProductionDetails" parameterType="String" resultType="Storing">
	SELECT
		 RIGHT(ad.stockAdjDetailCode,3) AS stockAdjDetailCode
		,RIGHT(ad.inventoryCode,3) AS inventoryCode
		,i.itemName
		,ad.adjCount
		,ad.afterCount
		,ad.adjWeight
		,ad.stockWeight
		,ad.status
		,ad.`comment`
	FROM
		k1_tb_stock_adjustment AS a
		JOIN
		k1_tb_stock_adjustment_detail AS ad
		ON
		a.stockAdjCode = ad.stockAdjCode
		JOIN
		k1_view_stock AS i
		ON
		ad.inventoryCode = i.inventoryCode
	WHERE
		a.stockAdjCode = CONCAT('stockAdjCode_', #{stockAdjCode})
		AND a.stockReasonCode = 3;
</select>

<!-- 4. 창고이동내역 상세(목록) -->
<select id="getMovingDetails" parameterType="String" resultType="Storing">
	SELECT
		 RIGHT(ad.stockAdjDetailCode,3) AS stockAdjDetailCode
		,RIGHT(ad.inventoryCode,3) AS inventoryCode
		,i.itemName
		,ad.adjCount
		,ad.afterCount
		,ad.adjWeight
		,ad.stockWeight
		,ad.status
		,ad.`comment`
	FROM
		k1_tb_stock_adjustment AS a
		JOIN
		k1_tb_stock_adjustment_detail AS ad
		ON
		a.stockAdjCode = ad.stockAdjCode
		JOIN
		k1_view_stock AS i
		ON
		ad.inventoryCode = i.inventoryCode
	WHERE
		a.stockAdjCode = CONCAT('stockAdjCode_', #{stockAdjCode})
		AND a.stockReasonCode = 4;
</select>

<!-- 5. 출하내역 상세(목록) -->
<select id="getShipmentDetails" parameterType="String" resultType="Storing">
	SELECT
		 RIGHT(ad.stockAdjDetailCode,3) AS stockAdjDetailCode
		,RIGHT(ad.inventoryCode,3) AS inventoryCode
		,i.itemName
		,RIGHT(ad.salesTsCode, 3) AS salesTsCode
		,ad.adjCount
		,ad.afterCount
		,ad.adjWeight
		,ad.stockWeight
		,ad.status
		,ad.`comment`
	FROM
		k1_tb_stock_adjustment AS a
		JOIN
		k1_tb_stock_adjustment_detail AS ad
		ON
		a.stockAdjCode = ad.stockAdjCode
		JOIN
		k1_view_stock AS i
		ON
		ad.inventoryCode = i.inventoryCode
	WHERE
		a.stockAdjCode = CONCAT('stockAdjCode_', #{stockAdjCode})
		AND a.stockReasonCode = 5;
</select>

<!-- 6. 재고차이조정내역 상세(목록) -->
<select id="getAdjDetails" parameterType="String" resultType="Storing">
	SELECT
		 RIGHT(ad.stockAdjDetailCode,3) AS stockAdjDetailCode
		,RIGHT(ad.inventoryCode,3) AS inventoryCode
		,RIGHT(i.itemCode,3) AS itemCode
		,i.itemName
		,RIGHT(ad.purchaseTsCode,3) AS purchaseTsCode
		,RIGHT(ad.salesTsCode,3) AS salesTsCode
		,ad.adjCount
		,ad.afterCount
		,ad.adjWeight
		,ad.stockWeight
		,ad.status
		,ad.`comment`
	FROM
		k1_tb_stock_adjustment AS a
		JOIN
		k1_tb_stock_adjustment_detail AS ad
		ON
		a.stockAdjCode = ad.stockAdjCode
		JOIN
		k1_view_stock AS i
		ON
		ad.inventoryCode = i.inventoryCode
	WHERE
		a.stockAdjCode = CONCAT('stockAdjCode_',#{stockAdjCode})
		AND a.stockReasonCode = 6;
</select>

<!-- 7. 반품처리내역 상세(목록) -->
<select id="getReturnDetails" parameterType="String" resultType="Storing">
	SELECT
		 RIGHT(ad.stockAdjDetailCode,3) AS stockAdjDetailCode
		,RIGHT(ad.inventoryCode,3) AS inventoryCode
		,i.itemName
		,ad.adjCount
		,ad.afterCount
		,ad.adjWeight
		,ad.stockWeight
		,RIGHT(ad.purchaseTsCode,3 ) AS purchaseTsCode
		,RIGHT(ad.salesTsCode, 3) AS salesTsCode
		,ad.status
		,ad.defectType
		,ad.defectHandlingType
		,ad.`comment`
	FROM
		k1_tb_stock_adjustment AS a
		JOIN
		k1_tb_stock_adjustment_detail AS ad
		ON
		a.stockAdjCode = ad.stockAdjCode
		JOIN
		k1_view_stock AS i
		ON
		ad.inventoryCode = i.inventoryCode
	WHERE
		a.stockAdjCode = CONCAT('stockAdjCode_', #{stockAdjCode})
		AND a.stockReasonCode = 7;
</select>

<!-- 8. 불량처리내역 상세(목록) -->
<select id="getDefectDetails" parameterType="String" resultType="Storing">
	SELECT
		 RIGHT(ad.stockAdjDetailCode,3) AS stockAdjDetailCode
		,RIGHT(ad.inventoryCode,3) AS inventoryCode
		,RIGHT(i.itemCode,3) AS itemCode
		,i.itemName
		,ad.adjCount
		,ad.afterCount
		,ad.adjWeight
		,ad.stockWeight
		,ad.status
		,ad.defectType
		,ad.defectHandlingType
		,ad.`comment`
	FROM
		k1_tb_stock_adjustment AS a
		JOIN
		k1_tb_stock_adjustment_detail AS ad
		ON
		a.stockAdjCode = ad.stockAdjCode
		JOIN
		k1_view_stock AS i
		ON
		ad.inventoryCode = i.inventoryCode
	WHERE
		a.stockAdjCode = CONCAT('stockAdjCode_',#{stockAdjCode})
		AND a.stockReasonCode = 8;
</select>

<!-- 출하계획 전체조회 -->
<select id="getShipmentPlanList" parameterType="String" resultType="Storing">
	SELECT 
		 RIGHT(sp.shipmentPlanCode,3) AS shipmentPlanCode
		,RIGHT(sp.contractCode,3) AS contractCode
		,c.clientCode
		,c.clientBusinessName AS businessName
		,sp.receiveAddr
		,sp.planDate AS sendPlanDate
		,sp.briefs
		,sp.managerId
		,u.userName AS managerName
		,LEFT(sp.updateDate,10) AS updateDate
	FROM 
		k1_tb_shipment_plan AS sp
		JOIN
		k1_tb_user AS u
		ON
		sp.managerId = u.userId
		LEFT JOIN
		k1_view_contract AS c
		ON
		sp.contractCode = c.contractCode
	WHERE
		sp.mainBusinessCode = #{mainBusinessCode};
</select>

<!-- 출하계획 상세조회 -->
<select id="getShipmentPlanInfo" parameterType="String" resultType="Storing">
	SELECT 
		 RIGHT(sp.shipmentPlanCode,3) AS shipmentPlanCode
		,RIGHT(sp.contractCode,3) AS contractCode
		,RIGHT(sp.productOrderCode,3) AS productOrderCode
		,c.clientCode
		,c.clientBusinessName AS businessName
		,sp.receiveAddr
		,sp.planDate AS sendPlanDate
		,sp.briefs
		,sp.managerId
		,sp.managerName
		,sp.regDate
		,sp.updateDate
	FROM 
		k1_view_shipment_plan AS sp
		LEFT JOIN
		k1_view_contract AS c
		ON
		sp.contractCode = c.contractCode
	WHERE
		sp.mainBusinessCode = #{mainBusinessCode}
		AND sp.shipmentPlanCode = CONCAT('shipmentPlanCode_',#{shipmentPlanCode});
</select>
<select id="getShipmentPlanDetails" parameterType="String" resultType="Storing">
	SELECT
		 RIGHT(sd.itemCode,3) AS itemCode
		,st.itemName
		,st.unitPrice
		,RIGHT(st.warehouseCode,3) AS warehouseCode
		,st.warehouseName
		,st.location
		,st.outPlace
		,sd.itemCount AS adjCount
		,sd.itemWeight AS adjWeight
		,sd.totalPrice
		,sd.`comment`
	FROM
		k1_view_shipment_plan AS sd
		JOIN
		k1_view_stock AS st
		ON
		sd.itemCode = st.itemCode
	WHERE
		sp.shipmentPlanCode = CONCAT('shipmentPlanCode_',#{shipmentPlanCode});
</select>

<!-- 반품요청내역 전체목록 -->
<select id="getReturnRegList" parameterType="String" resultType="Storing">
	SELECT 
		 RIGHT(r.returnRegCode,3) AS returnRegCode
		,r.clientCode
		,c.businessName
		,r.totalPrice
		,r.briefs
		,r.managerId
		,r.managerName
		,LEFT(r.updateDate,10) AS updateDate
	FROM 
		k1_view_return_reg AS r
		JOIN
		k1_tb_client AS c
		ON
		r.clientCode = c.clientCode
	WHERE
		r.mainBusinessCode = #{mainBusinessCode};
</select>

<!-- 반품요청내역 상세정보(날짜) -->
<select id="getReturnRegInfo" parameterType="String" resultType="Storing">
	SELECT 
		 RIGHT(r.returnRegCode,3) AS returnRegCode
		,r.clientCode
		,r.clientBusinessName AS businessName
		,RIGHT(r.purchaseTsCode,3) AS purchaseTsCode
		,RIGHT(r.salesTsCode,3) AS salesTsCode
		,CASE
			WHEN r.purchaseTsCode IS NULL THEN st.contractCode
			WHEN r.salesTsCode IS NULL THEN pt.contractCode
		END AS contractCode
		,r.totalPrice
		,r.briefs
		,r.managerId
		,r.managerName
		,r.regDate
		,r.updateDate
	FROM 
		k1_view_return_reg AS r
		LEFT JOIN
		k1_view_purchase_transaction AS pt
		ON
		r.purchaseTsCode = pt.purchaseTsCode
		LEFT JOIN
		k1_view_sales_transaction AS st
		ON
		r.salesTsCode = st.salesTsCode
	WHERE
		r.returnRegCode = CONCAT('returnRegCode_',#{returnRegCode});
</select>
<!-- 반품요청내역 상세정보 목록 -->
<select id="getReturnRegDetails" parameterType="String" resultType="Storing">
	SELECT
		 RIGHT(r.itemCode,3) AS itemCode
		,r.itemName
		,r.amount
		,r.`count` AS adjCount
		,r.totalPrice
		,r.`comment`
	FROM 
		k1_view_return_reg AS r
	WHERE
		d.returnRegCode = CONCAT('returnRegCode_',#{returnRegCode});
</select>

<!-- 물류이동 등록페이지에서 특정 재고 정보 불러오기 -->
<select id="getStockForStoring" parameterType="String" resultType="Stock">
	SELECT
		 RIGHT(s.inventoryCode,3) AS inventoryCode
		,RIGHT(s.itemCode,3) AS itemCode
		,s.itemName
		,s.unitPrice
		,s.stockWeight
		,s.`status`
		,s.`comment`
	FROM
		k1_view_stock AS s
	WHERE
		s.mainBusinessCode = #{mainBusinessCode}
		AND s.inventoryCode = CONCAT('inventoryCode_',#{inventoryCode});
</select>

</mapper>
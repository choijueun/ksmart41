<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="k1.smart.team.mapper.cje.ItemMapper">

<!-- 품목정보 전체목록 -->
<select id="getAllItemList" parameterType="map" resultType="Stock">
	SELECT
		 RIGHT(i.itemCode,3) AS itemCode
		,i.itemName
		,i.itemType
		,RIGHT(i.categoryCode,3) AS categoryCode
		,i.largeCategory
		,i.middleCategory
		,i.smallCategory
		,i.microCategory
		,i.itemStandard
		,i.itemOrigin
		,i.itemStatus
		,i.itemComment
		,i.regDate AS itemRegDate
		,i.updateDate AS itemUpdateDate
	FROM
		k1_view_item_info AS i
	<trim prefix="WHERE" prefixOverrides="AND |OR ">
		<if test="mainBusinessCode != null and mainBusinessCode != ''.toString()">
			i.mainBusinessCode = #{mainBusinessCode}
		</if>
		<if test="typeList != null and typeList != ''.toString()">
		AND i.itemType REGEXP #{typeList}
		</if>
		<if test="largeCategory != null and largeCategory != ''.toString()">
			AND i.largeCategory = #{largeCategory}
			<if test="middleCategory != null and middleCategory != ''.toString()">
				AND i.middleCategory = #{middleCategory}
				<if test="smallCategory != null and smallCategory != ''.toString()">
					AND i.smallCategory = #{smallCategory}
					<if test="microCategory != null and microCategory != ''.toString()">
						AND i.microCategory = #{microCategory}
					</if>
				</if>
			</if>
		</if>
		<if test='includeN == null or !includeN.equals("INCLUDE")'>
			AND i.itemStatus = 'Y'
		</if> 
	</trim>
	ORDER BY
		i.itemCode DESC;
</select>

<!-- 품목정보 상세조회 -->
<select id="getItemInfo" parameterType="String" resultType="Stock">
	SELECT
		 RIGHT(i.itemCode,3) AS itemCode
		,i.itemName
		,i.itemType
		,i.categoryCode
		,i.largeCategory
		,i.middleCategory
		,i.smallCategory
		,i.microCategory
		,s.itemCount
		,i.itemOrigin
		,ROUND(AVG(s.unitPrice),0) AS avgPrice
		,SUM(s.totalPrice) AS totalPrice
		,SUM(s.totalWeight) AS totalWeight
		,i.itemStandard
		,i.itemStatus
		,i.itemComment
		,i.regDate AS itemRegDate
		,i.updateDate AS itemUpdateDate
	FROM
		k1_view_item_info AS i
		LEFT JOIN
		k1_view_stock AS s
		ON
		i.itemCode = s.itemCode
	WHERE
		i.itemCode = CONCAT('itemCode_',#{itemCode})
	GROUP BY 
		i.itemCode;
</select>

<!-- 특정품목 재고현황 -->
<select id="getItemStock" parameterType="String" resultType="Stock">
	SELECT
		 RIGHT(s.inventoryCode,3) AS inventoryCode
		,RIGHT(s.warehouseCode,3) AS warehouseCode
		,s.warehouseName
		,s.location
		,s.outPlace
		,s.totalWeight
		,s.itemCount
		,s.unitPrice AS productPrice
		,s.totalPrice
	FROM
		k1_view_stock AS s
	WHERE
		s.itemCode = CONCAT('itemCode_',#{itemCode})
	ORDER BY
		s.inventoryCode ASC
	LIMIT 10;
</select>

<!-- 품목명 중복 확인 -->
<select id="itemNameValid" parameterType="String" resultType="int">
	SELECT
		COUNT(1)
	FROM
		k1_view_item_info
	WHERE
		mainBusinessCode = #{mainBusinessCode}
		AND itemName = #{itemName};
</select>

<!-- 카테고리 전체 목록 조회 -->
<select id="getAllCategories" resultType="Stock">
	SELECT
		 RIGHT(c.categoryCode,3) AS categoryCode
		,c.largeCategory
		,c.middleCategory
		,c.smallCategory
		,c.microCategory
		,c.`comment`
		,c.regDate AS itemRegDate
		,c.updateDate AS itemUpdateDate
	FROM
		k1_tb_item_category AS c
	WHERE
		mainBusinessCode = #{mainBusinessCode};
</select>

<!-- 카테고리 대분류 조회 -->
<select id="getCategoryLarge" resultType="String">
	SELECT
		DISTINCT(largeCategory)
	FROM
		k1_tb_item_category;
</select>

<!-- 카테고리 중분류 조회 -->
<select id="getCategoryMiddle" parameterType="String" resultType="String">
	SELECT
		DISTINCT(middleCategory)
	FROM
		k1_tb_item_category
	WHERE
		largeCategory = #{largeCategory} 
</select>

<!-- 카테고리 소분류 조회 -->
<select id="getCategorySmall" parameterType="String" resultType="String">
	SELECT
		DISTINCT(smallCategory)
	FROM
		k1_tb_item_category
	<trim prefix="WHERE" prefixOverrides="AND |OR ">
		<if test="largeCategory != null and largeCategory != ''.toString()">
			largeCategory = #{largeCategory}
		</if>
		<if test="middleCategory != null and middleCategory != ''.toString()">
			AND middleCategory = #{middleCategory}
		</if>
	</trim>
</select>

<!-- 카테고리 소소분류 조회 -->
<select id="getCategoryMicro" parameterType="String" resultType="String">
	SELECT
		DISTINCT(microCategory)
	FROM
		k1_tb_item_category
	<trim prefix="WHERE" prefixOverrides="AND |OR ">
		<if test="largeCategory != null and largeCategory != ''.toString()">
			largeCategory = #{largeCategory}
		</if>
		<if test="middleCategory != null and middleCategory != ''.toString()">
			AND middleCategory = #{middleCategory}
		</if>
		<if test="smallCategory != null and smallCategory != ''.toString()">
			AND smallCategory = #{smallCategory}
		</if>
	</trim>
</select>

<!-- 품목정보 등록 -->
<insert id="addItem" parameterType="Stock">
	INSERT INTO k1_tb_item_info
		(itemCode
		,mainBusinessCode
		,itemName
		,itemType
		<if test="categoryCode != null and categoryCode != ''.toString()">
		,categoryCode
		</if>
		,itemStandard
		,itemOrigin
		<if test="itemStatus != null and itemStatus != ''.toString()">
		,itemStatus
		</if>
		<if test="itemComment != null and itemComment != ''.toString()">
		,itemComment
		</if>
		,regDate
		,updateDate
	) VALUES(
		CONCAT('itemCode_',
			(SELECT
			   LPAD(CAST(MAX(RIGHT(i.itemCode,3))+1 AS CHAR), 3, '0') AS newCodeNum
			FROM 
			   k1_tb_item_info AS i)
		)
		,#{mainBusinessCode}
		,#{itemName}
		,#{itemType}
		<if test="categoryCode != null and categoryCode != ''.toString()">
		,#{categoryCode}
		</if>
		,#{itemStandard}
		,#{itemOrigin}
		<if test="itemStatus != null and itemStatus != ''.toString()">
		,#{itemStatus}
		</if>
		<if test="itemComment != null and itemComment != ''.toString()">
		,#{itemComment}
		</if>
		,NOW()
		,NOW()
	);
</insert>

<!-- 품목정보 수정 -->
<update id="modifyItem" parameterType="Stock">
	UPDATE IGNORE
		k1_tb_item_info
	SET
		itemName=#{itemName},
		itemType=#{itemType},
		<if test="categoryCode!= null and categoryCode!= ''.toString()">
			categoryCode=#{categoryCode},
		</if>
		itemStandard=#{itemStandard},
		itemOrigin=#{itemOrigin},
		<if test="itemStatus!= null and itemStatus!= ''.toString()">
			itemStatus=#{itemStatus},
		</if>
		<if test="itemComment!= null and itemComment!= ''.toString()">
			itemComment=#{itemComment},
		</if>
		updateDate=NOW()
	WHERE 
		itemCode = CONCAT('itemCode_',#{itemCode});
</update>

<!-- 품목사용가능여부 수정 프로세스 -->
<update id="modifyUse" parameterType="String">
	UPDATE k1_tb_item_info
		SET
			itemStatus=#{itemStatus}
		WHERE itemCode = CONCAT('itemCode_',#{itemCode})
</update>

<!-- 카테고리 코드 검색 -->
<select id="getCategoryCode" parameterType="String" resultType="String">
	SELECT
		categoryCode
	FROM
		k1_tb_item_category
	WHERE
		largeCategory = #{largeCategory}
		AND middleCategory = #{middleCategory}
		<choose>
			<when test="smallCategory != null and smallCategory != ''.toString()">
				AND smallCategory = #{smallCategory}
			</when>
			<otherwise>
				AND smallCategory is null
			</otherwise>
		</choose>
		<choose>
			<when test="microCategory != null and microCategory != ''.toString()">
				AND microCategory = #{microCategory}
			</when>
			<otherwise>
				AND microCategory is null
			</otherwise>
		</choose>
		AND mainBusinessCode = #{mainBusinessCode};
</select>

<!-- 카테고리 정보 등록 -->
<insert id="addItemCategory" parameterType="Stock">
	INSERT INTO k1_tb_item_category
		(categoryCode, mainBusinessCode, largeCategory, middleCategory, smallCategory, microCategory, `comment`, regDate, updateDate)
	VALUES (
		CONCAT('categoryCode_',(SELECT
									LPAD(CAST(MAX(RIGHT(c.categoryCode,3))+1 AS CHAR), 3, '0') AS newCodeNum
								FROM 
									k1_tb_item_category AS c)
				)
		, #{mainBusinessCode}, #{largeCategory}, #{middleCategory}, #{smallCategory}, #{microCategory}, #{comment}, NOW(), NOW()
	);
</insert>

<!-- 카테고리 정보 수정 -->
<update id="modifyItemCategory" parameterType="Stock">
	UPDATE IGNORE
		k1_tb_item_category
	SET
		largeCategory=#{largeCategory},
		middleCategory=#{middleCategory},
		smallCategory=#{smallCategory},
		microCategory=#{microCategory},
		`comment`=#{comment},
		updateDate=NOW()
	WHERE
		categoryCode = CONCAT('categoryCode_',#{categoryCode})
		AND mainBusinessCode = #{mainBusinessCode};
</update>


</mapper>
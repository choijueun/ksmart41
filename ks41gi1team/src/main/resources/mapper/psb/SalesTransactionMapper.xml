<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="k1.smart.team.mapper.psb.SalesTransactionMapper">
	<resultMap type="SalesTransaction" id="salesTransactionResultMap">
		<result column="salesTsCode" 					property="salesTsCode"/>
		<result column="mainBusinessCode" 				property="mainBusinessCode"/>
		<result column="clientCode" 					property="clientCode"/>
		<result column="lsAccountCode" 				property="lsAccountCode"/>
		<result column="contractCode" 				property="contractCode"/>
		<result column="vatType" 					property="vatType"/>
		<result column="amount" 						property="amount"/>
		<result column="VAT" 						property="VAT"/>
		<result column="totalPrice" 						property="totalPrice"/>
		<result column="dealDate" 							property="dealDate"/>
		<result column="briefs" 					property="briefs"/>
	<result column="regId" 						property="regId"/>
	<result column="regDate" 					property="regDate"/>
		<result column="updateDate" 						property="updateDate"/>
	</resultMap>
	
	<select id="getSalesTransactionCode" resultType="String">
	SELECT 
			CONCAT(SUBSTRING(s.salesTsCode,1,14),MAX(SUBSTRING(s.salesTsCode,14))+1)
		FROM 
			k1_tb_sales_transaction AS s
	</select>
	<insert id="addSalesTransaction" parameterType="SalesTransaction">
		INSERT INTO k1_tb_contract
		(
			salesTsCode,
			mainBusinessCode,
			clientCode,
			lsAccountCode,
			contractCode,
			vatType,
			amount,
			vat,
			totalPrice,
			dealDate,
			briefs
		)VALUES(					
			#{salesTsCode},
			#{mainBusinessCode},
			#{clientCode},
			#{lsAccountCode},
			#{contractCode},
			#{amount},
			#{vat},
			#{totalPrice},
			#{dealDate},
			#{briefs}
		);
	</insert>
	
	<select id="getSalesTransactionList" parameterType="String" resultType="SalesTransaction" >
	SELECT	
		st.salesTsCode as salesTsCode,
		st.mainBusinessCode as mainBusinessCode,
		st.clientCode as clientCode,
		st.lsAccountCode as lsAccountCode,
		st.contractCode as contractCode,
		st.vatType as vatType,
		st.amount as amount,
		st.totalPrice as totalPrice,
		st.dealDate as dealDate,
		st.briefs as briefs,
		st.userName as userName,
		st.regDate as regDate,
		st.updateDate as updateDate
	FROM 
		k1_view_sales_transaction AS st
	GROUP BY 
		st.salesTsCode;
	</select>
	
	<select id="getSalesTransactionHistoryList" parameterType="map" resultType="map">
		SELECT	
			st.salesTsCode,
			st.mainBusinessCode,
			st.clientCode,
			st.businessName,
			st.lsAccountCode,
			st.contractCode,
			st.vatType,
			st.amount,
			st.count,
			st.unitPrice,
			st.totalPrice,
			st.dealDate,
			st.briefs,
			st.userName,
			st.regDate,
			st.updateDate,
			mb.businessName as mbBusinessName,
			ls.lsAccountName as lsAccountName,
			contr.contractStatus as contractStatus
		FROM 
			k1_view_sales_transaction AS st
		INNER JOIN
			k1_tb_main_business as mb
		ON
			mb.mainbusinessCode = st.mainbusinessCode	
		INNER JOIN
			k0_tb_ls as ls
		ON
			ls.lsAccountCode = st.lsAccountCode	
		INNER JOIN
			k1_view_contract as contr
		ON
			st.contractCode = contr.contractCode	
	</select>

</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="k1.smart.team.mapper.psb.ContractMapper">
	<resultMap type="Contract" id="contractResultMap">
		<result column="contractCode" 					property="contractCode"/>
		<result column="mainBusinessCode" 				property="mainBusinessCode"/>
		<result column="clientCode" 					property="clientCode"/>
		<result column="clientManagerId" 				property="clientManagerId"/>
		<result column="contractSection" 				property="contractSection"/>
		<result column="contractType" 					property="contractType"/>
		<result column="startDate" 						property="startDate"/>
		<result column="endDate" 						property="endDate"/>
		<result column="managerId" 						property="managerId"/>
		<result column="regId" 							property="regId"/>
		<result column="approvalId" 					property="approvalId"/>
	<result column="contractDate" 						property="contractDate"/>
	<result column="contractStatus" 					property="contractStatus"/>
		<result column="briefs" 						property="briefs"/>
		<result column="regDate" 						property="regDate"/>
		<result column="uodateDate" 					property="uodateDate"/>
		<result column="businessRepresentative" 		property="businessRepresentative"/>
		<result column="userName" 						property="userName"/>
	</resultMap>
	
	<resultMap type="Contract" id="contractCodeForMaterialOrderCodeResultMap">
		<result column="contractCode" 					property="contractCode"/>
	</resultMap>
	
	<resultMap type="Contract" id="contractCodeForProductOrderCodeResultMap">
		<result column="contractCode" 					property="contractCode"/>
	</resultMap>

	<update id="modifyContractInfo" parameterType="Contract">
		UPDATE k1_tb_contract
		<trim prefix="SET" prefixOverrides=",">
			<if test="mainBusinessCode != null and mainBusinessCode != ''.toString()">			
				 mainBusinessCode		=#{mainBusinessCode}
			</if>
			<if test="clientCode != null and clientCode != ''.toString()">
				,clientCode	=#{clientCode}
			</if>
			<if test="clientManagerId != null and clientManagerId != ''.toString()">		
				,clientManagerId		=#{clientManagerId}
			</if>
			<if test="contractSection != null and contractSection != ''.toString()">
				,contractSection	=#{contractSection}
			</if>
			<if test="contractType != null and contractType != ''.toString()">
				,contractType		=#{contractType}
			</if>
			<if test="startDate != null and startDate != ''.toString()">
				,startDate		=#{startDate}
			</if>
			<if test="endDate != null and endDate != ''.toString()">
				,endDate		=#{endDate}
			</if>
			<if test="managerId != null and managerId != ''.toString()">
				,managerId		=#{contractType}
			</if>
			<if test="regId != null and regId != ''.toString()">
				,regId		=#{contractType}
			</if>
			<if test="managerId != null and managerId != ''.toString()">
				,managerId		=#{contractType}
			</if>
			<if test="managerId != null and managerId != ''.toString()">
				,managerId		=#{contractType}
			</if>
			<if test="managerId != null and managerId != ''.toString()">
				,managerId		=#{contractType}
			</if>
			<if test="managerId != null and managerId != ''.toString()">
				,managerId		=#{contractType}
			</if>
			</trim>
	</update>
	
	<select id="getContractInfoByCode" parameterType="String" resultType="Contract">
		SELECT 
			cd.contractNum,
			mb.businessName as mbBusinessName,
			c.contractCode,
			c.clientBusinessName,
			c.clientManagerName,
			c.contractSection,
			c.contractType,
			c.startDate,
			c.endDate,
			c.managerName,
			c.regName,
			c.approvalName,
			c.contractDate,
			c.contractStatus,
			c.briefs,
			c.regDate,
			c.updateDate
		FROM
			k1_view_contract AS c
		 INNER JOIN 
 			k1_tb_contract_detail AS cd
		 ON
			 cd.contractCode = c.contractCode
 		INNER JOIN 
			 k1_tb_main_business AS mb
 		ON
 			mb.mainBusinessCode = c.mainBusinessCode
 		WHERE
 			c.contractCode = #{contractCode} 	
	</select>
	
	<select id="getContractCodeForMaterialOrderCodeList" parameterType="String" resultMap="contractCodeForMaterialOrderCodeResultMap">
		SELECT
 			c.contractCode as contractCode
		FROM 
			k1_tb_contract AS c
		WHERE 
			c.contractSection="발주";			
	</select>
	
	<select id="getContractCodeForProductOrderCodeList" parameterType="String" resultMap="contractCodeForProductOrderCodeResultMap">
		SELECT
 			c.contractCode as contractCode
		FROM 
			k1_tb_contract AS c
		WHERE 
			c.contractSection="수주";			
	</select>
	
	<select id="getContractCode" resultType="String">
		SELECT
	   LPAD(CAST(MAX(RIGHT(contractCode,3))+1 AS CHAR), 3, '0') AS newCodeNum
	FROM 
	   k1_tb_contract;	
	
	</select>

	 <select id="getContractByContractCode" parameterType="String" resultType="int">
		SELECT 
			COUNT(1)
		FROM	
			k1_view_contract
		WHERE  
			contractCode = #{contractCode};
	</select>
	 

	
	<select id="getContractList" resultType="Contract">
		SELECT 
			c.contractCode,
			c.mainBusinessCode,
			c.clientCode,
			c.clientManagerId,
			c.contractSection,
			c.contractType,
			c.startDate,
			c.endDate,
			c.managerId,
			c.regId,
			c.approvalId,
			c.contractDate,
			c.contractStatus,
			c.briefs,
			c.regDate,
			c.updateDate
		FROM 
			k1_view_contract AS c
		WHERE 
			c.mainBusinessCode IS NOT NULL;	
	</select>
	

	<insert id="addContract" parameterType="Contract">
		INSERT INTO k1_tb_contract
		(
			contractCode,
			mainBusinessCode,
			clientCode,
			clientManagerId,
			contractSection,
			contractType,
			startDate,
			endDate,
			managerId,
			regId,
			approvalId,
			contractDate,
			contractStatus,
			briefs,
			regDate,
			updateDate
		)VALUES(					
			#{contractCode},
			#{mainBusinessCode},
			#{clientCode},
			#{clientManagerId},
			#{contractSection},
			#{contractType},
			#{startDate},
			#{endDate},
			#{managerId},
			#{regId},
			#{approvalId},
			#{contractDate},
			#{contractStatus},
			#{briefs},
			CURDATE(),
			#{updateDate}
		);
	</insert>
	
	
	
	<select id="getContractListBySearchKey" parameterType="String" resultMap="contractResultMap">
		SELECT	
			contr.contractCode as contractCode,
			contr.mainBusinessCode as mainBusinessCode,
			contr.clientCode as clientCode,
			contr.clientManagerId as clientManagerId,
			contr.contractSection as contractSection,
			contr.contractType as contractType,
			contr.startDate as startDate,
			contr.endDate as endDate,
			contr.managerId as managerId,
			contr.regId as regId,
			contr.approvalId as approvalId,
			contr.contractDate as contractDate,
			contr.contractStatus as contractStatus,
			contr.briefs as briefs,
			contr.regDate as regDate,
			contr.updateDate as updateDate,
			c.businessRepresentative AS businessRepresentative,
			c.businessName as businessName
		FROM 
			k1_view_contract AS contr
			INNER JOIN 
			k1_tb_client AS c
			on
			contr.clientCode = c.clientCode;
	</select>
	
	<select id="getContractHistoryList" parameterType="String" resultType="Contract">
		SELECT
			RIGHT(contr.contractCode,3) as contractCode,
			contr.mainBusinessCode as mainBusinessCode,
			mb.businessName as businessName,
			contr.clientCode as clientCode,
			contr.clientBusinessName as clientBusinessName,
			c.businessRepresentative AS businessRepresentative,
			contr.clientManagerId as clientManagerId,
			contr.contractSection as contractSection,
			contr.contractType as contractType,
			contr.startDate as startDate,
			contr.endDate as endDate,
			contr.managerId as managerId,
			contr.managerName,
			contr.regId as regId,
			contr.regName,
			contr.contractDate as contractDate,
			contr.contractStatus as contractStatus,
			contr.briefs as briefs,
			contr.regDate as regDate,
			contr.updateDate as updateDate,
			contr.mainBusinessCode
		FROM 
			k1_view_contract AS contr
			INNER JOIN 
			k1_tb_client AS c
			on
			contr.clientCode = c.clientCode
			INNER JOIN
			k1_tb_main_business as mb
			ON
			mb.mainBusinessCode = contr.mainBusinessCode

	</select>
	
	<select id="getAllContractList" parameterType="String" resultType="Contract">
		SELECT
			 RIGHT(c.contractCode,3) AS contractCode
			,c.clientCode
			,c.clientBusinessName
			,c.clientManagerId
			,c.clientManagerName
			,c.contractSection
			,c.contractType
			,c.startDate
			,c.endDate
			,c.managerId
			,c.managerName
			,c.regId
			,c.regName
			,c.approvalId
			,c.approvalName
			,c.contractDate
			,c.contractStatus
			,c.briefs
			,c.regDate
			,c.updateDate
		FROM
			k1_view_contract c
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="mainBusinessCode != null and mainBusinessCode != ''.toString()">
				c.mainBusinessCode = #{mainBusinessCode}
			</if>
		</trim>
	

	</select>

</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="k1.smart.team.mapper.psb.MaterialOrderMapper">

<select id="getMaterialOrderCodeInfo" resultType="String">
	SELECT
	   materialOrderCode
	FROM 
	   k1_tb_material_order
	WHERE
		materialOrderCode = #{materialOrderCode};   	
	</select>
	
<select id="getMaterialOrderCode" resultType="String">
		SELECT
	   LPAD(CAST(MAX(RIGHT(materialOrderCode,3))+1 AS CHAR), 3, '0') AS newCodeNum
	FROM 
	   k1_tb_material_order;	
	</select>

 <select id="getMaterialOrderByMaterialOrderCode" parameterType="String" resultType="int">
		SELECT 
			COUNT(1)
		FROM	
			k1_view_material_order
		WHERE  
			materialOrderCode = #{materialOrderCode};
	</select>

<insert id="addMaterialOrder" parameterType="MaterialOrder">
		INSERT INTO k1_tb_material_order(
			materialOrderCode
			, mainBusinessCode
			, contractCode
			, clientCode
			, totalCount
			, totalPrice
			, orderDate
			, predictDate
			, `status`
			, briefs
			, managerId
			, regDate
			, updateDate)
		VALUES (
			#{materialOrderCode}
			,#{mainBusinessCode}
			,#{contractCode}
			,#{clientCode} 
			,#{totalCount} 
			,#{totalPrice} 
			,#{orderDate} 
			,#{predictDate} 
			,#{status} 
			,#{briefs} 
			,#{managerId} 
			,curdate()
			,#{updateDate} 
			);
	</insert>
	
<select id="getMaterialOrderInfoList" parameterType="String" resultType="MaterialOrderInfo">
	SELECT 
		RIGHT(mord.materialOrderOngoingCode, 3) AS materialOrderOngoingCode
		,RIGHT(ii.itemCode,3) as itemCode
		,ii.itemName
		,mord.itemCount
		,mord.itemPrice
		,(mord.itemCount*mord.itemPrice) AS totalPrice
		,mord.realReceiveDate
		,mord.reserveStatus AS status
		,mord.`comment`
	FROM 
		k1_tb_material_order_detail AS mord
	INNER JOIN
		k1_view_material_order AS mo
	ON
		mord.materialOrderCode = mo.materialOrderCode
	INNER JOIN 
		k1_tb_item_info AS ii
	on
		mord.itemCode =ii.itemCode
	WHERE 
		mo.materialOrderCode = CONCAT('materialOrderCode_', #{materialOrderCode})
		<if test=" mainBusinessCode != null and mainBusinessCode != ''.toString() ">
		AND mo.mainBusinessCode = #{mainBusinessCode}
		</if>
</select>	
	
<select id="getMaterialOrderInfo" parameterType="String" resultType="MaterialOrder">
		SELECT 
			RIGHT(mo.materialOrderCode,3) AS materialOrderCode
			,mo.mainBusinessCode
			,mb.businessName
			,mo.contractCode
			,mo.clientCode
			,c.businessName AS clientBusinessName
			,mo.managerId
			,mo.managerName
			,mo.orderDate
			,mo.predictDate
			,GROUP_CONCAT(DISTINCT i.itemName SEPARATOR ', ') AS itemName
			,mo.totalCount
			,mo.totalPrice
			,mo.`status`
			,mo.regDate
			,mo.updateDate
			,mo.briefs
		FROM 
			k1_view_material_order AS mo
		INNER JOIN
			k1_tb_material_order_detail AS mord
		ON
			mo.materialOrderCode = mord.materialOrderCode
		INNER JOIN
			k1_view_item_info AS i
		on
			mord.itemCode = i.itemCode
		INNER JOIN 
			k1_tb_main_business AS mb
		on
			mo.mainBusinessCode = mb.mainBusinessCode
		INNER JOIN
			k1_tb_client AS c
		on
			mo.clientCode =c.clientCode
		LEFT JOIN
			k1_tb_contract AS contr
		ON 
			mo.contractCode = contr.contractCode
		WHERE 
			mo.materialOrderCode = #{materialOrderCode};
</select>



<update id="modifyMaterialOrderInfo" parameterType="MaterialOrder">
	update IGNORE
		k1_view_material_order as mo 
		inner join
		k1_tb_material_order_detail as mo2
		on
		mo.materialOrderCode = mo2.materialOrderCode
	SET
		mo.orderDate = #{orderDate},
		mo.mainBusinessCode = #{mainBusinessCode},
		mo.businessName = #{businessName},
		mo.contractCode = #{contractCode},
		mo.clientCode = #{clientCode},
		mo.predictDate = #{predictDate},
		mo.clientBusinessName = #{clientBusinessName},
		mo.itemName = #{itemName},
		mo.totalCount = #{totalCount},
		mo.totalPrice = #{totalPrice},
		mo.status = #{status},
		mo.briefs = #{briefs},
		mo.managerId = #{managerId},
		mo.regDate = #{regDate},
		mo.updateDate = #{updateDate},
		mo2.materialOrderCode = #{materialOrderCode},
		mo2.itemCode = #{itemCode},
		mo2.itemCount =#{itemCount},
		mo2.itemPrice = #{itemPrice},
		mo2.realReceiveDate = #{realReceiveDate},
		mo2.reserveStatus = #{reserveStatus},
		mo2.comment = #{comment}
	WHERE 
		materialOrderCode=#{materialOrderCode};	
</update>

<select id="getMaterialOrderListBySearchKey" parameterType="String" resultType="MaterialOrder">
		SELECT
			mo.materialOrderCode as materialOrderCode,
			mo.mainBusinessCode as mainBusinessCode,
			mo.contractCode as contractCode,
			mo.clientCode as clientCode,
			mo.totalCount as totalCount,
			mo.totalPrice as totalPrice,
			mo.orderDate as orderDate,
			mo.predictDate as predictDate,
			mo.status as status,
			mo.briefs as briefs,
			mo.managerId as managerId,
			mo.regDate as regDate,
			mo.updateDate as updateDate
		FROM 
			k1_view_material_order AS mo;
		
	</select>	
		
<select id="getMaterialOrderList" parameterType="String" resultType="MaterialOrder">
	SELECT 
		RIGHT(mo.materialOrderCode,3) AS materialOrderCode,
		RIGHT(mo.contractCode,3) as contractCode,
		mo.clientCode as clientCode,
		c.businessName as businessName,
		GROUP_CONCAT(DISTINCT ii.itemName SEPARATOR ', ') AS itemName,
		mo.totalCount as totalCount,
		mo.totalPrice as totalPrice,
		mo.orderDate as orderDate,
		mo.predictDate as predictDate,
		mo.status as status,
		mo.briefs as briefs,
		mo.managerId as managerId,
		mo.regDate as regDate,
		mo.updateDate as updateDate
	FROM	
		k1_view_material_order AS mo
		INNER JOIN
		k1_tb_material_order_detail AS mord
		ON
		mo.materialOrderCode = mord.materialOrderCode
		INNER join
		k1_tb_client AS c
		on
		mo.clientCode = c.clientCode
		INNER JOIN 
		k1_tb_item_info AS ii
		on
		ii.itemCode = mord.itemCode

	GROUP BY 
		mo.materialOrderCode
</select>	
	
</mapper>	